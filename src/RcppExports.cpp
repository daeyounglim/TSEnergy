// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// boxcoxar
Rcpp::List boxcoxar(const arma::vec& yobs, const arma::uvec& miss, const double& a, const arma::mat& xobs, const arma::mat& zobs, const arma::mat& uobs, const arma::vec& mu_beta0, const arma::mat& Sig_beta0, const arma::vec& mu_alpha0, const arma::mat& Sig_alpha0, const arma::vec& mu_eta0, const arma::mat& Sig_eta0, const int& ndiscard, const int& nskip, const int& nkeep, const bool verbose);
RcppExport SEXP _TSEnergy_boxcoxar(SEXP yobsSEXP, SEXP missSEXP, SEXP aSEXP, SEXP xobsSEXP, SEXP zobsSEXP, SEXP uobsSEXP, SEXP mu_beta0SEXP, SEXP Sig_beta0SEXP, SEXP mu_alpha0SEXP, SEXP Sig_alpha0SEXP, SEXP mu_eta0SEXP, SEXP Sig_eta0SEXP, SEXP ndiscardSEXP, SEXP nskipSEXP, SEXP nkeepSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type yobs(yobsSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type miss(missSEXP);
    Rcpp::traits::input_parameter< const double& >::type a(aSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type xobs(xobsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type zobs(zobsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type uobs(uobsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu_beta0(mu_beta0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sig_beta0(Sig_beta0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu_alpha0(mu_alpha0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sig_alpha0(Sig_alpha0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu_eta0(mu_eta0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sig_eta0(Sig_eta0SEXP);
    Rcpp::traits::input_parameter< const int& >::type ndiscard(ndiscardSEXP);
    Rcpp::traits::input_parameter< const int& >::type nskip(nskipSEXP);
    Rcpp::traits::input_parameter< const int& >::type nkeep(nkeepSEXP);
    Rcpp::traits::input_parameter< const bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(boxcoxar(yobs, miss, a, xobs, zobs, uobs, mu_beta0, Sig_beta0, mu_alpha0, Sig_alpha0, mu_eta0, Sig_eta0, ndiscard, nskip, nkeep, verbose));
    return rcpp_result_gen;
END_RCPP
}
// boxcoxar_amh
Rcpp::List boxcoxar_amh(const arma::vec& yobs, const arma::uvec& miss, const double& a, const arma::mat& xobs, const arma::mat& zobs, const arma::mat& uobs, const arma::vec& mu_beta0, const arma::mat& Sig_beta0, const arma::vec& mu_alpha0, const arma::mat& Sig_alpha0, const arma::vec& mu_eta0, const arma::mat& Sig_eta0, const int& ndiscard, const int& nskip, const int& nkeep, const bool verbose);
RcppExport SEXP _TSEnergy_boxcoxar_amh(SEXP yobsSEXP, SEXP missSEXP, SEXP aSEXP, SEXP xobsSEXP, SEXP zobsSEXP, SEXP uobsSEXP, SEXP mu_beta0SEXP, SEXP Sig_beta0SEXP, SEXP mu_alpha0SEXP, SEXP Sig_alpha0SEXP, SEXP mu_eta0SEXP, SEXP Sig_eta0SEXP, SEXP ndiscardSEXP, SEXP nskipSEXP, SEXP nkeepSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type yobs(yobsSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type miss(missSEXP);
    Rcpp::traits::input_parameter< const double& >::type a(aSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type xobs(xobsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type zobs(zobsSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type uobs(uobsSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu_beta0(mu_beta0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sig_beta0(Sig_beta0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu_alpha0(mu_alpha0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sig_alpha0(Sig_alpha0SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type mu_eta0(mu_eta0SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sig_eta0(Sig_eta0SEXP);
    Rcpp::traits::input_parameter< const int& >::type ndiscard(ndiscardSEXP);
    Rcpp::traits::input_parameter< const int& >::type nskip(nskipSEXP);
    Rcpp::traits::input_parameter< const int& >::type nkeep(nkeepSEXP);
    Rcpp::traits::input_parameter< const bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(boxcoxar_amh(yobs, miss, a, xobs, zobs, uobs, mu_beta0, Sig_beta0, mu_alpha0, Sig_alpha0, mu_eta0, Sig_eta0, ndiscard, nskip, nkeep, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TSEnergy_boxcoxar", (DL_FUNC) &_TSEnergy_boxcoxar, 16},
    {"_TSEnergy_boxcoxar_amh", (DL_FUNC) &_TSEnergy_boxcoxar_amh, 16},
    {NULL, NULL, 0}
};

RcppExport void R_init_TSEnergy(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
